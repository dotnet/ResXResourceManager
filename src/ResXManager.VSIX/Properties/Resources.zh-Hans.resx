<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AssemblyLocation" xml:space="preserve">
    <value>程序集位置：{0}</value>
  </data>
  <data name="CanNotCreateWindow" xml:space="preserve">
    <value>无法创建工具窗口</value>
  </data>
  <data name="CodeGenerator_CommandGroup" xml:space="preserve">
    <value>代码生成器</value>
  </data>
  <data name="CodeGenerator_CommandInternal" xml:space="preserve">
    <value>自定义工具 (内部访问)</value>
  </data>
  <data name="CodeGenerator_CommandPublic" xml:space="preserve">
    <value>自定义工具 (公共访问)</value>
  </data>
  <data name="CodeGenerator_CommandTextTemplate" xml:space="preserve">
    <value>文本模板</value>
  </data>
  <data name="CodeHeader" xml:space="preserve">
    <value>代码：</value>
  </data>
  <data name="CommentHeader" xml:space="preserve">
    <value>注释：</value>
  </data>
  <data name="DuplicateKey" xml:space="preserve">
    <value>重复名称</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>错误：</value>
  </data>
  <data name="ExtensionLoadingError" xml:space="preserve">
    <value>无法加载 ResX Resource Manager 扩展: {0}。
详情参见输出窗口。</value>
  </data>
  <data name="IntroMessage" xml:space="preserve">
    <value>ResX Resource Manager 已加载
首页: https://github.com/dotnet/ResXResourceManager
报告问题: https://github.com/dotnet/ResXResourceManager/issues
简短评论一下来支持我们吧: https://marketplace.visualstudio.com/items?itemName=TomEnglert.ResXManager#review-details
翻译自 https://github.com/yinyue200</value>
  </data>
  <data name="KeyContainsInvalidCharacters" xml:space="preserve">
    <value>名称中包含无效字符。</value>
  </data>
  <data name="KeyHeader" xml:space="preserve">
    <value>名称：</value>
  </data>
  <data name="MoveToResource" xml:space="preserve">
    <value>移动到资源</value>
  </data>
  <data name="MoveToResourceEditNewEntry" xml:space="preserve">
    <value>在 ResX Resource Manager 中编辑新项目</value>
  </data>
  <data name="OpenInResXManager" xml:space="preserve">
    <value>在 ResX Manager 中打开</value>
  </data>
  <data name="ProjectHasNoResourceFile" xml:space="preserve">
    <value>该项目没有该语言的资源文件 "{0}"。

要将资源文件添加到项目中吗？</value>
  </data>
  <data name="ProjectHasReadOnlyFiles" xml:space="preserve">
    <value>项目中的某些文件不可写。 确保您具有对这些文件的写入权限：

{0}</value>
  </data>
  <data name="ResourceHeader" xml:space="preserve">
    <value>资源：</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="ShowWhitespaceToolTip" xml:space="preserve">
    <value>显示空格和格式符号</value>
  </data>
  <data name="ValueHeader" xml:space="preserve">
    <value>值：</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>版本：{0}</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>警告：</value>
  </data>
  <data name="ShowErrorsConfiguration_Header" xml:space="preserve">
    <value>错误提示</value>
  </data>
  <data name="ShowErrorsConfiguration_SwitchHeader" xml:space="preserve">
    <value>在错误列表中显示</value>
  </data>
  <data name="ShowErrorsConfiguration_ShowAs" xml:space="preserve">
    <value>显示为</value>
  </data>
  <data name="QuerySaveUnchangedResources" xml:space="preserve">
    <value>你的资源中还有未保存的修改。你要保存修改吗？</value>
  </data>
</root>