<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net472</TargetFramework>
    <OutputType>WinExe</OutputType>
    <WarningLevel>4</WarningLevel>
    <UseWindowsForms>true</UseWindowsForms>
    <UseWPF>true</UseWPF>
    <ApplicationIcon>ResourceManager.ico</ApplicationIcon>
    <PublishProfile>ClickOnce.pubxml</PublishProfile>
  </PropertyGroup>
  <PropertyGroup Condition="Exists('$(USERPROFILE)\tom-englert.de')">
    <DefineConstants>$(DefineConstants);TEST_L10N</DefineConstants>
  </PropertyGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Resource Include="ResourceManager.ico" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\ResXManager.Infrastructure\ResXManager.Infrastructure.csproj" />
    <ProjectReference Include="..\ResXManager.Model\ResXManager.Model.csproj" />
    <ProjectReference Include="..\ResXManager.Translators\ResXManager.Translators.csproj" />
    <ProjectReference Include="..\ResXManager.View\ResXManager.View.csproj" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="AutoProperties.Fody" PrivateAssets="all" />
    <PackageReference Include="Fody" PrivateAssets="all" />
    <PackageReference Include="ILMerge.Fody" PrivateAssets="all" />
    <PackageReference Include="Microsoft.CSharp" />
    <PackageReference Include="Microsoft.SourceLink.GitHub" PrivateAssets="all" />
    <PackageReference Include="PropertyChanged.Fody" PrivateAssets="all" />
    <PackageReference Include="System.ComponentModel.Annotations" />
    <PackageReference Include="System.Data.DataSetExtensions" />
    <PackageReference Include="TomsToolbox.Composition.Ninject" />
    <PackageReference Include="TomsToolbox.Wpf.Composition.AttributedModel" />
    <PackageReference Include="TomsToolbox.Wpf.Styles" />
    <PackageReference Include="WindowsAPICodePack-Shell" PrivateAssets="All" />
  </ItemGroup>
  <ItemGroup>
    <Service Include="{508349B6-6B84-4DF5-91F0-309BEEBAD82D}" />
  </ItemGroup>
  <Target Name="CompressFiles" AfterTargets="Publish" Condition="'$(Configuration)'=='Release'" Outputs="$(SolutionDir)Deploy\Publish.zip">
    <MakeDir Directories="$(SolutionDir)Deploy" />
    <ZipDirectory DestinationFile="$(SolutionDir)Deploy\Publish.zip" Overwrite="True" SourceDirectory="$(ClickOncePublishDir)" />
  </Target></Project>