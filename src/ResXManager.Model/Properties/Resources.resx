<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DuplicateKeyError" xml:space="preserve">
    <value>Duplicate keys in '{0}':
{1}
</value>
  </data>
  <data name="DuplicateKeyHandling_Fail" xml:space="preserve">
    <value>Show an error message and don't load the resource</value>
  </data>
  <data name="DuplicateKeyHandling_Rename" xml:space="preserve">
    <value>Postfix duplicate/empty keys with "_Duplicate[#]"/"_Empty[#]"</value>
  </data>
  <data name="EmptyKeysError" xml:space="preserve">
    <value>Empty keys in '{0}'</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="EmptyResxTemplate" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>EmptyResxTemplate.txt;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;Windows-1252</value>
  </data>
  <data name="ExcelExport_MultipleSheets" xml:space="preserve">
    <value>Multiple sheets</value>
  </data>
  <data name="ExcelExport_SingleSheet" xml:space="preserve">
    <value>Single sheet</value>
  </data>
  <data name="FileSaveError" xml:space="preserve">
    <value>Error saving file '{0}':
{1}
</value>
  </data>
  <data name="ImportColumnMismatchError" xml:space="preserve">
    <value>At least three columns expected.</value>
  </data>
  <data name="ImportDuplicateLanguageError" xml:space="preserve">
    <value>Duplicate language in header.</value>
  </data>
  <data name="ImportFailedError" xml:space="preserve">
    <value>Import failed. Nothing has been imported.</value>
  </data>
  <data name="ImportFailedPartiallyError" xml:space="preserve">
    <value>Import failed partially. Some columns have been already imported, but not all.</value>
  </data>
  <data name="ImportHeaderMismatchError" xml:space="preserve">
    <value>Standard header expected.</value>
  </data>
  <data name="ImportLanguageNotEditable" xml:space="preserve">
    <value>The language "{0}" can't be edited. The operation was aborted.</value>
  </data>
  <data name="ImportMapSheetError" xml:space="preserve">
    <value>The sheet "{0}" can't be imported; there is no matching resource file in the solution.</value>
  </data>
  <data name="InvalidResourceFileError" xml:space="preserve">
    <value>{0} is not a valid RESX resource file: No xml root.</value>
  </data>
  <data name="InvalidResourceFileNameAttributeMissingError" xml:space="preserve">
    <value>{0} is not a valid RESX resource file: Not all entries have a name attribute.</value>
  </data>
  <data name="InvalidResourceFileValueAttributeMissingError" xml:space="preserve">
    <value>{0} is not a valid RESX resource file: Not all entries have a value attribute.</value>
  </data>
  <data name="LanguageNotDefinedError" xml:space="preserve">
    <value>Language is not defined: "{0}".</value>
  </data>
  <data name="Neutral" xml:space="preserve">
    <value>Neutral</value>
  </data>
  <data name="SnapshotAnnotation" xml:space="preserve">
    <value>Snapshot: "{0}"</value>
  </data>
  <data name="ResourceTableEntry_Error_StringFormatParameterMismatch" xml:space="preserve">
    <value>Warning: This item contains string format parameter mismatches!</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>ResX Resource Manager</value>
    <comment>@Invariant</comment>
  </data>
  <data name="NotAllLanguagesAreEditable" xml:space="preserve">
    <value>Not all resource files are editable</value>
  </data>
  <data name="KeyAlreadyExists" xml:space="preserve">
    <value>This key already exists: {0}</value>
  </data>
  <data name="ResourceTableEntry_Error_MissingTranslation" xml:space="preserve">
    <value>Missing translation</value>
  </data>
  <data name="ResourceTableEntry_Error_InvariantWithValue" xml:space="preserve">
    <value>Item is invariant but contains a value</value>
  </data>
  <data name="ExcelExport_PlainTextTabDelimited" xml:space="preserve">
    <value>Plain text, tab delimited</value>
  </data>
  <data name="ResourceTableEntryRuleStringFormat_Name" xml:space="preserve">
    <value>Matching string format parameters</value>
  </data>
  <data name="ResourceTableEntryRuleStringFormat_Description" xml:space="preserve">
    <value>This rule verifies that the string format parameters match in all translations of a item.</value>
  </data>
  <data name="ResourceTableEntryRulePunctuationLead_Name" xml:space="preserve">
    <value>Leading punctuation</value>
  </data>
  <data name="ResourceTableEntryRulePunctuationLead_Description" xml:space="preserve">
    <value>This rule verifies that the punctuation of the entry matches between all translations.</value>
  </data>
  <data name="ResourceTableEntryRulePunctuationTail_Name" xml:space="preserve">
    <value>Trailing punctuation</value>
  </data>
  <data name="ResourceTableEntryRulePunctuationTail_Description" xml:space="preserve">
    <value>This rule verifies the punctuation at the end of the message.</value>
  </data>
  <data name="ResourceTableEntryRuleWhiteSpaceLead_Name" xml:space="preserve">
    <value>Leading whitespace</value>
  </data>
  <data name="ResourceTableEntryRuleWhiteSpaceLead_Description" xml:space="preserve">
    <value>This rule verifies that the whitespaces at the start of the messages match.</value>
  </data>
  <data name="ResourceTableEntryRuleWhiteSpaceLead_Error_Intro" xml:space="preserve">
    <value>The whitespaces at the start of the sequence don't match up.</value>
  </data>
  <data name="ResourceTableEntryRuleWhiteSpaceLead_Error_NoWhiteSpaceExpected" xml:space="preserve">
    <value>No whitespaces are expected at the start of the sequence.</value>
  </data>
  <data name="ResourceTableEntryRuleWhiteSpaceLead_Error_WhiteSpaceSeqExpected" xml:space="preserve">
    <value>The expected whitespace sequence is: {0}</value>
  </data>
  <data name="ResourceTableEntryRuleWhiteSpaceTail_Name" xml:space="preserve">
    <value>Trailing whitespace</value>
  </data>
  <data name="ResourceTableEntryRuleWhiteSpaceTail_Description" xml:space="preserve">
    <value>This rule verifies that the trailing whitespaces of the messages match.</value>
  </data>
  <data name="ResourceTableEntryRuleWhiteSpaceTail_Error_Intro" xml:space="preserve">
    <value>The whitespaces at the end of the sequence don't match up.</value>
  </data>
  <data name="ResourceTableEntryRuleWhiteSpaceTail_Error_NoWhiteSpaceExpected" xml:space="preserve">
    <value>No whitespaces are expected at the end of the sequence.</value>
  </data>
  <data name="ResourceTableEntryRuleWhiteSpaceTail_Error_WhiteSpaceSeqExpected" xml:space="preserve">
    <value>The expected whitespace sequence is: {0}</value>
  </data>
  <data name="ResourceTableEntryRulePunctuationLead_Error_Intro" xml:space="preserve">
    <value>The punctuation at the start of the messages doesn't match up.</value>
  </data>
  <data name="ResourceTableEntryRulePunctuationLead_Error_NoPunctuationExpected" xml:space="preserve">
    <value>No punctuation was expected at the start of the message.</value>
  </data>
  <data name="ResourceTableEntryRulePunctuationLead_Error_PunctuationSeqExpected" xml:space="preserve">
    <value>The expected leading punctuation sequence is: {0}</value>
  </data>
  <data name="ResourceTableEntryRulePunctuationTail_Error_Intro" xml:space="preserve">
    <value>The punctuation at the end of the messages doesn't match up.</value>
  </data>
  <data name="ResourceTableEntryRulePunctuationTail_Error_NoPunctuationExpected" xml:space="preserve">
    <value>No punctuation was expected at the end of the message.</value>
  </data>
  <data name="ResourceTableEntryRulePunctuationTail_Error_PunctuationSeqExpected" xml:space="preserve">
    <value>The expected trailing punctuation sequence is: {0}</value>
  </data>
</root>