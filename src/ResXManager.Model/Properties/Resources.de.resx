<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DuplicateKeyError">
    <value>Doppelte Schlüssel in '{0}':
{1}
</value>
  </data>
  <data name="DuplicateKeyHandling_Fail" xml:space="preserve">
    <value>Eine Fehlermeldung anzeigen und die Datei nicht laden</value>
  </data>
  <data name="DuplicateKeyHandling_Rename" xml:space="preserve">
    <value>Doppelte/leere Schlüssel umbenennen ("_Duplicate[#]"/"_Empty[#]" anhängen)</value>
  </data>
  <data name="EmptyKeysError" xml:space="preserve">
    <value>Leere Schlüssel in '{0}'</value>
  </data>
  <data name="ExcelExport_MultipleSheets" xml:space="preserve">
    <value>In mehrere Arbeitsblätter</value>
  </data>
  <data name="ExcelExport_SingleSheet" xml:space="preserve">
    <value>In ein einziges Arbeitsblatt</value>
  </data>
  <data name="FileSaveError">
    <value>Fehler beim Speichern der Datei '{0}':
{1}
</value>
  </data>
  <data name="ImportColumnMismatchError">
    <value>Mindestens drei Spalten erwartet.</value>
  </data>
  <data name="ImportDuplicateLanguageError">
    <value>Doppelte Sprache gefunden.</value>
  </data>
  <data name="ImportFailedError">
    <value>Import fehlgeschlagen. Es wurde nichts importiert.</value>
  </data>
  <data name="ImportFailedPartiallyError">
    <value>Import teilweise fehlgeschlagen. Einige Spalten wurden überschrieben, aber nicht alle.</value>
  </data>
  <data name="ImportHeaderMismatchError">
    <value>Kopfzeile entspricht nicht dem Standard.</value>
  </data>
  <data name="ImportLanguageNotEditable" xml:space="preserve">
    <value>Die Sprache "{0}" kann nicht bearbeitet werden. Der Vorgang wurde abgebrochen.</value>
  </data>
  <data name="ImportMapSheetError" xml:space="preserve">
    <value>Das Arbeitsblatt "{0}" kann nicht importiert werden; es gibt keine passende Ressource in der Umgebung.</value>
  </data>
  <data name="InvalidResourceFileError">
    <value>{0} ist keine gültige Ressourcedatei: Kein xml root.</value>
  </data>
  <data name="InvalidResourceFileNameAttributeMissingError">
    <value>{0} ist keine gültige Ressourcedatei: Nicht alle Einträge haben ein 'name' - Attribute.</value>
  </data>
  <data name="InvalidResourceFileValueAttributeMissingError">
    <value>{0} ist keine gültige Ressourcedatei: Nicht alle Einträge haben ein 'value' - Attribute.</value>
  </data>
  <data name="LanguageNotDefinedError">
    <value>Die Sprache "{0}" ist nicht definiert.</value>
  </data>
  <data name="Neutral">
    <value>Neutral</value>
  </data>
  <data name="SnapshotAnnotation" xml:space="preserve">
    <value>Snapshot: "{0}"</value>
  </data>
  <data name="ResourceTableEntry_Error_StringFormatParameterMismatch" xml:space="preserve">
    <value>Warnung: Dieser Text enthält String-Format Parameterinkonsistenzen!</value>
  </data>
  <data name="NotAllLanguagesAreEditable" xml:space="preserve">
    <value>Nicht alle Ressourcendateien sind editierbar</value>
  </data>
  <data name="KeyAlreadyExists" xml:space="preserve">
    <value>Der Schlüssel existiert bereits: {0}</value>
  </data>
  <data name="ResourceTableEntry_Error_MissingTranslation" xml:space="preserve">
    <value>Fehlende Übersetzung</value>
  </data>
  <data name="ResourceTableEntry_Error_InvariantWithValue" xml:space="preserve">
    <value>Invarianter Eintrag enthält Übersetzung</value>
  </data>
  <data name="ExcelExport_PlainTextTabDelimited" xml:space="preserve">
    <value>Nur Text, Tabulator getrennt</value>
  </data>
  <data name="ResourceTableEntryRuleStringFormat_Name" xml:space="preserve">
    <value>Passende String Format Parameter</value>
  </data>
  <data name="ResourceTableEntryRuleStringFormat_Description" xml:space="preserve">
    <value>Diese Regel überprüft ob alle Übersetzungen die gleichen Parameter für String Format enthalten.</value>
  </data>
  <data name="ResourceTableEntryRulePunctuationLead_Name" xml:space="preserve">
    <value>Zeichensetzung am Anfang</value>
  </data>
  <data name="ResourceTableEntryRulePunctuationLead_Description" xml:space="preserve">
    <value>Diese Regel überprüft ob die Zeichensetzung am Anfang des Eintrages in jeder Übersetzung gleich ist.</value>
  </data>
  <data name="ResourceTableEntryRulePunctuationTail_Name" xml:space="preserve">
    <value>Zeichensetzung am Ende</value>
  </data>
  <data name="ResourceTableEntryRulePunctuationTail_Description" xml:space="preserve">
    <value>Diese Regel überprüft ob die Zeichensetzung am Ende des Eintrages in jeder Übersetzung gleich ist.</value>
  </data>
  <data name="ResourceTableEntryRuleWhiteSpaceLead_Name" xml:space="preserve">
    <value>Leerzeichen am Anfang</value>
  </data>
  <data name="ResourceTableEntryRuleWhiteSpaceLead_Description" xml:space="preserve">
    <value>Diese Regel überprüft ob die Leerzeichen am Anfang des Eintrages in jeder Übersetzung gleich ist.</value>
  </data>
  <data name="ResourceTableEntryRuleWhiteSpaceTail_Name" xml:space="preserve">
    <value>Leerzeichen am Ende</value>
  </data>
  <data name="ResourceTableEntryRuleWhiteSpaceTail_Description" xml:space="preserve">
    <value>Diese Regel überprüft ob die Leerzeichen am Ende des Eintrages in jeder Übersetzung gleich ist.</value>
  </data>
  <data name="ResourceTableEntryRuleWhiteSpaceLead_Error_Intro" xml:space="preserve">
    <value>Die Leerzeichen am Anfang des Eintrages stimmen nicht überein.</value>
  </data>
  <data name="ResourceTableEntryRuleWhiteSpaceLead_Error_NoWhiteSpaceExpected" xml:space="preserve">
    <value>Am Anfang des Eintrages wurden keine Leerzeichen erwartet.</value>
  </data>
  <data name="ResourceTableEntryRuleWhiteSpaceLead_Error_WhiteSpaceSeqExpected" xml:space="preserve">
    <value>Die erwartete Folge von Leerzeichen ist: {0}</value>
  </data>
  <data name="ResourceTableEntryRuleWhiteSpaceTail_Error_WhiteSpaceSeqExpected" xml:space="preserve">
    <value>Die erwartete Folge von Leerzeichen ist: {0}</value>
  </data>
  <data name="ResourceTableEntryRuleWhiteSpaceTail_Error_Intro" xml:space="preserve">
    <value>Die Leerzeichen am Ende des Eintrages stimmen nicht überein.</value>
  </data>
  <data name="ResourceTableEntryRuleWhiteSpaceTail_Error_NoWhiteSpaceExpected" xml:space="preserve">
    <value>Am Ende des Eintrages wurden keine Leerzeichen erwartet.</value>
  </data>
  <data name="ResourceTableEntryRulePunctuationLead_Error_Intro" xml:space="preserve">
    <value>Die Zeichensetzung am Anfang des Eintrages stimmen nicht überein.</value>
  </data>
  <data name="ResourceTableEntryRulePunctuationLead_Error_NoPunctuationExpected" xml:space="preserve">
    <value>Am Anfang des Eintrages wurden keine Satzzeichen erwartet.</value>
  </data>
  <data name="ResourceTableEntryRulePunctuationLead_Error_PunctuationSeqExpected" xml:space="preserve">
    <value>Der erwartete Folge von Satzzeichen ist: {0}</value>
  </data>
  <data name="ResourceTableEntryRulePunctuationTail_Error_PunctuationSeqExpected" xml:space="preserve">
    <value>Der erwartete Folge von Satzzeichen ist: {0}</value>
  </data>
  <data name="ResourceTableEntryRulePunctuationTail_Error_Intro" xml:space="preserve">
    <value>Die Zeichensetzung am Ende des Eintrages stimmen nicht überein.</value>
  </data>
  <data name="ResourceTableEntryRulePunctuationTail_Error_NoPunctuationExpected" xml:space="preserve">
    <value>Am Ende des Eintrages wurden keine Satzzeichen erwartet.</value>
  </data>
</root>