<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DuplicateKeyError" xml:space="preserve">
    <value>“{0}”中的重复键：
{1}</value>
  </data>
  <data name="DuplicateKeyHandling_Fail" xml:space="preserve">
    <value>显示错误消息，不加载该资源</value>
  </data>
  <data name="DuplicateKeyHandling_Rename" xml:space="preserve">
    <value>在重复或空的资源前增加 "_Duplicate[#]"/"_Empty[#]" 后缀</value>
  </data>
  <data name="EmptyKeysError" xml:space="preserve">
    <value>“{0}”中的空键</value>
  </data>
  <data name="ExcelExport_MultipleSheets" xml:space="preserve">
    <value>多工作表</value>
  </data>
  <data name="ExcelExport_SingleSheet" xml:space="preserve">
    <value>单工作表</value>
  </data>
  <data name="FileSaveError" xml:space="preserve">
    <value>保存文件“{0}”时出错：
{1}</value>

  </data>
  <data name="ImportColumnMismatchError" xml:space="preserve">
    <value>预期至少三个列。 </value>
  </data>
  <data name="ImportDuplicateLanguageError" xml:space="preserve">
    <value>头部中有重复的语言。 </value>
  </data>
  <data name="ImportFailedError" xml:space="preserve">
    <value>导入失败，没有内容被导入。</value>
  </data>
  <data name="ImportFailedPartiallyError" xml:space="preserve">
    <value>导入部分失败，仅部分列被导入。</value>
  </data>
  <data name="ImportHeaderMismatchError" xml:space="preserve">
    <value>预期的标准头。 </value>
  </data>
  <data name="ImportLanguageNotEditable" xml:space="preserve">
    <value>不能编辑语言"{0}"。已中止操作。</value>
  </data>
  <data name="ImportMapSheetError" xml:space="preserve">
    <value>表"{0}"不能导入;在解决方案中没有匹配的资源文件。</value>
  </data>
  <data name="InvalidResourceFileError" xml:space="preserve">
    <value>{0} 不是有效的 RESX 资源文件︰没有 xml 根。</value>
  </data>
  <data name="InvalidResourceFileNameAttributeMissingError" xml:space="preserve">
    <value>{0} 不是有效的 RESX 资源文件︰并不是所有的条目具有名称属性。</value>
  </data>
  <data name="InvalidResourceFileValueAttributeMissingError" xml:space="preserve">
    <value>{0} 不是有效的 RESX 资源文件：并非所有条目都具有值属性。</value>
  </data>
  <data name="LanguageNotDefinedError" xml:space="preserve">
    <value>未定义语言：{0}</value>
  </data>
  <data name="Neutral" xml:space="preserve">
    <value>中立</value>
  </data>
  <data name="SnapshotAnnotation" xml:space="preserve">
    <value>快照：“{0}”</value>
  </data>
  <data name="ResourceTableEntry_Error_StringFormatParameterMismatch" xml:space="preserve">
    <value>警告︰ 此项目包含字符串格式参数不匹配！</value>
  </data>
  <data name="NotAllLanguagesAreEditable" xml:space="preserve">
    <value>某些资源文件是只读的</value>
  </data>
  <data name="KeyAlreadyExists" xml:space="preserve">
    <value>名称 {0} 已经存在</value>
  </data>
    <data name="ResourceTableEntry_Error_MissingTranslation" xml:space="preserve">
      <value>缺少翻译</value>
  </data>
  <data name="ResourceTableEntry_Error_InvariantWithValue" xml:space="preserve">
    <value>项目无效但包含值</value>
  </data>
</root>
