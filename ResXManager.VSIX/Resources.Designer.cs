//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// 
// This template generates PublicResXFileCodeGenerator compatible code plus some
// useful extensions. 
// 
// The original version provided by ResXResourceManager is restricted to resource key names
// that are valid c# identifiers to keep this template simple (KISS!).
// 
// Us it as it is or as a scaffold to generate the code you need.
//
// As long as you have ResXResourceManager running in the background, the generated code 
// will be kept up to date.
//  
//------------------------------------------------------------------------------

namespace tomenglertde.ResXManager.VSIX {
    using System;
    using System.Diagnostics.Contracts;

    using JetBrains.Annotations;

    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by a text template.
    // To add or remove a member, edit your .ResX file.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ResXResourceManager", "1.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("tomenglertde.ResXManager.VSIX.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Assembly location: {0}.
        /// </summary>
        [NotNull]
        public static string AssemblyLocation {
            get {
                Contract.Ensures(Contract.Result<string>() != null);
                return ResourceManager.GetString("AssemblyLocation", resourceCulture) ?? string.Empty;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Can not create tool window..
        /// </summary>
        [NotNull]
        public static string CanNotCreateWindow {
            get {
                Contract.Ensures(Contract.Result<string>() != null);
                return ResourceManager.GetString("CanNotCreateWindow", resourceCulture) ?? string.Empty;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Code generator.
        /// </summary>
        [NotNull]
        public static string CodeGenerator_CommandGroup {
            get {
                Contract.Ensures(Contract.Result<string>() != null);
                return ResourceManager.GetString("CodeGenerator_CommandGroup", resourceCulture) ?? string.Empty;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Custom tool (internal access).
        /// </summary>
        [NotNull]
        public static string CodeGenerator_CommandInternal {
            get {
                Contract.Ensures(Contract.Result<string>() != null);
                return ResourceManager.GetString("CodeGenerator_CommandInternal", resourceCulture) ?? string.Empty;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Custom tool (public access).
        /// </summary>
        [NotNull]
        public static string CodeGenerator_CommandPublic {
            get {
                Contract.Ensures(Contract.Result<string>() != null);
                return ResourceManager.GetString("CodeGenerator_CommandPublic", resourceCulture) ?? string.Empty;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Text template.
        /// </summary>
        [NotNull]
        public static string CodeGenerator_CommandTextTemplate {
            get {
                Contract.Ensures(Contract.Result<string>() != null);
                return ResourceManager.GetString("CodeGenerator_CommandTextTemplate", resourceCulture) ?? string.Empty;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Custom tool code generator, internal access..
        /// </summary>
        [NotNull]
        public static string CodeGenerator_Internal {
            get {
                Contract.Ensures(Contract.Result<string>() != null);
                return ResourceManager.GetString("CodeGenerator_Internal", resourceCulture) ?? string.Empty;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Custom tool code generator, public access..
        /// </summary>
        [NotNull]
        public static string CodeGenerator_Public {
            get {
                Contract.Ensures(Contract.Result<string>() != null);
                return ResourceManager.GetString("CodeGenerator_Public", resourceCulture) ?? string.Empty;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to TextTemplate code generator..
        /// </summary>
        [NotNull]
        public static string CodeGenerator_TextTemplate {
            get {
                Contract.Ensures(Contract.Result<string>() != null);
                return ResourceManager.GetString("CodeGenerator_TextTemplate", resourceCulture) ?? string.Empty;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Unknown code generator..
        /// </summary>
        [NotNull]
        public static string CodeGenerator_Unkown {
            get {
                Contract.Ensures(Contract.Result<string>() != null);
                return ResourceManager.GetString("CodeGenerator_Unkown", resourceCulture) ?? string.Empty;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to WinForms Designer.
        /// </summary>
        [NotNull]
        public static string CodeGenerator_WinForms {
            get {
                Contract.Ensures(Contract.Result<string>() != null);
                return ResourceManager.GetString("CodeGenerator_WinForms", resourceCulture) ?? string.Empty;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Code:.
        /// </summary>
        [NotNull]
        public static string CodeHeader {
            get {
                Contract.Ensures(Contract.Result<string>() != null);
                return ResourceManager.GetString("CodeHeader", resourceCulture) ?? string.Empty;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Comment:.
        /// </summary>
        [NotNull]
        public static string CommentHeader {
            get {
                Contract.Ensures(Contract.Result<string>() != null);
                return ResourceManager.GetString("CommentHeader", resourceCulture) ?? string.Empty;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Duplicate key.
        /// </summary>
        [NotNull]
        public static string DuplicateKey {
            get {
                Contract.Ensures(Contract.Result<string>() != null);
                return ResourceManager.GetString("DuplicateKey", resourceCulture) ?? string.Empty;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Error:.
        /// </summary>
        [NotNull]
        public static string Error {
            get {
                Contract.Ensures(Contract.Result<string>() != null);
                return ResourceManager.GetString("Error", resourceCulture) ?? string.Empty;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Some files are open in another window. Please clos....
        /// </summary>
        [NotNull]
        public static string ErrorOpenFilesInEditor {
            get {
                Contract.Ensures(Contract.Result<string>() != null);
                return ResourceManager.GetString("ErrorOpenFilesInEditor", resourceCulture) ?? string.Empty;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Error loading the ResX Manager extension: {0}.&amp....
        /// </summary>
        [NotNull]
        public static string ExtensionLoadingError {
            get {
                Contract.Ensures(Contract.Result<string>() != null);
                return ResourceManager.GetString("ExtensionLoadingError", resourceCulture) ?? string.Empty;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to ResX Resource Manager loaded.&amp;#13;&amp;#10;Hom....
        /// </summary>
        [NotNull]
        public static string IntroMessage {
            get {
                Contract.Ensures(Contract.Result<string>() != null);
                return ResourceManager.GetString("IntroMessage", resourceCulture) ?? string.Empty;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to The key contains invalid characters..
        /// </summary>
        [NotNull]
        public static string KeyContainsInvalidCharacters {
            get {
                Contract.Ensures(Contract.Result<string>() != null);
                return ResourceManager.GetString("KeyContainsInvalidCharacters", resourceCulture) ?? string.Empty;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Key:.
        /// </summary>
        [NotNull]
        public static string KeyHeader {
            get {
                Contract.Ensures(Contract.Result<string>() != null);
                return ResourceManager.GetString("KeyHeader", resourceCulture) ?? string.Empty;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Move to Resource.
        /// </summary>
        [NotNull]
        public static string MoveToResource {
            get {
                Contract.Ensures(Contract.Result<string>() != null);
                return ResourceManager.GetString("MoveToResource", resourceCulture) ?? string.Empty;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Edit new entry in ResX Resource Manager.
        /// </summary>
        [NotNull]
        public static string MoveToResourceEditNewEntry {
            get {
                Contract.Ensures(Contract.Result<string>() != null);
                return ResourceManager.GetString("MoveToResourceEditNewEntry", resourceCulture) ?? string.Empty;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Open in ResX Manager.
        /// </summary>
        [NotNull]
        public static string OpenInResXManager {
            get {
                Contract.Ensures(Contract.Result<string>() != null);
                return ResourceManager.GetString("OpenInResXManager", resourceCulture) ?? string.Empty;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to The project has no resource file for the language ....
        /// </summary>
        [NotNull]
        public static string ProjectHasNoResourceFile {
            get {
                Contract.Ensures(Contract.Result<string>() != null);
                return ResourceManager.GetString("ProjectHasNoResourceFile", resourceCulture) ?? string.Empty;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Some files in your project are not writable. Make ....
        /// </summary>
        [NotNull]
        public static string ProjectHasReadOnlyFiles {
            get {
                Contract.Ensures(Contract.Result<string>() != null);
                return ResourceManager.GetString("ProjectHasReadOnlyFiles", resourceCulture) ?? string.Empty;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Resource:.
        /// </summary>
        [NotNull]
        public static string ResourceHeader {
            get {
                Contract.Ensures(Contract.Result<string>() != null);
                return ResourceManager.GetString("ResourceHeader", resourceCulture) ?? string.Empty;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Error loading resource files: {0}. &amp;#13;&amp;#....
        /// </summary>
        [NotNull]
        public static string ResourceLoadingError {
            get {
                Contract.Ensures(Contract.Result<string>() != null);
                return ResourceManager.GetString("ResourceLoadingError", resourceCulture) ?? string.Empty;
            }
        }

        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static System.Byte[] Resources_Designer_t4 {
            get {
                object obj = ResourceManager.GetObject("Resources_Designer_t4", resourceCulture);
                return ((System.Byte[])(obj));
            }
        }

        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static System.Byte[] Resources_Designer_tt {
            get {
                object obj = ResourceManager.GetObject("Resources_Designer_tt", resourceCulture);
                return ((System.Byte[])(obj));
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Error reporting.
        /// </summary>
        [NotNull]
        public static string ShowErrorsConfiguration_Header {
            get {
                Contract.Ensures(Contract.Result<string>() != null);
                return ResourceManager.GetString("ShowErrorsConfiguration_Header", resourceCulture) ?? string.Empty;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Show as.
        /// </summary>
        [NotNull]
        public static string ShowErrorsConfiguration_ShowAs {
            get {
                Contract.Ensures(Contract.Result<string>() != null);
                return ResourceManager.GetString("ShowErrorsConfiguration_ShowAs", resourceCulture) ?? string.Empty;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Show messages in error list.
        /// </summary>
        [NotNull]
        public static string ShowErrorsConfiguration_SwitchHeader {
            get {
                Contract.Ensures(Contract.Result<string>() != null);
                return ResourceManager.GetString("ShowErrorsConfiguration_SwitchHeader", resourceCulture) ?? string.Empty;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Show white space and formatting symbols.
        /// </summary>
        [NotNull]
        public static string ShowWhitespaceToolTip {
            get {
                Contract.Ensures(Contract.Result<string>() != null);
                return ResourceManager.GetString("ShowWhitespaceToolTip", resourceCulture) ?? string.Empty;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to ResX Resource Manager.
        /// </summary>
        /// <remarks>
        /// @Invariant
        /// </remarks>
        [NotNull]
        public static string ToolWindowTitle {
            get {
                Contract.Ensures(Contract.Result<string>() != null);
                return ResourceManager.GetString("ToolWindowTitle", resourceCulture) ?? string.Empty;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Value:.
        /// </summary>
        [NotNull]
        public static string ValueHeader {
            get {
                Contract.Ensures(Contract.Result<string>() != null);
                return ResourceManager.GetString("ValueHeader", resourceCulture) ?? string.Empty;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Version: {0}.
        /// </summary>
        [NotNull]
        public static string Version {
            get {
                Contract.Ensures(Contract.Result<string>() != null);
                return ResourceManager.GetString("Version", resourceCulture) ?? string.Empty;
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to Warning:.
        /// </summary>
        [NotNull]
        public static string Warning {
            get {
                Contract.Ensures(Contract.Result<string>() != null);
                return ResourceManager.GetString("Warning", resourceCulture) ?? string.Empty;
            }
        }
    }

    /// <summary>
    /// Keys of all available strings in the applications resx-resources.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("ResXResourceManager", "1.0.0.0")]
    [global::System.Runtime.CompilerServices.CompilerGenerated]
    public enum StringResourceKey
    {
        /// <summary>
        ///   Looks up a localized string similar to Assembly location: {0}.
        /// </summary>
        AssemblyLocation,
        /// <summary>
        ///   Looks up a localized string similar to Can not create tool window..
        /// </summary>
        CanNotCreateWindow,
        /// <summary>
        ///   Looks up a localized string similar to Code generator.
        /// </summary>
        CodeGenerator_CommandGroup,
        /// <summary>
        ///   Looks up a localized string similar to Custom tool (internal access).
        /// </summary>
        CodeGenerator_CommandInternal,
        /// <summary>
        ///   Looks up a localized string similar to Custom tool (public access).
        /// </summary>
        CodeGenerator_CommandPublic,
        /// <summary>
        ///   Looks up a localized string similar to Text template.
        /// </summary>
        CodeGenerator_CommandTextTemplate,
        /// <summary>
        ///   Looks up a localized string similar to Custom tool code generator, internal access..
        /// </summary>
        CodeGenerator_Internal,
        /// <summary>
        ///   Looks up a localized string similar to Custom tool code generator, public access..
        /// </summary>
        CodeGenerator_Public,
        /// <summary>
        ///   Looks up a localized string similar to TextTemplate code generator..
        /// </summary>
        CodeGenerator_TextTemplate,
        /// <summary>
        ///   Looks up a localized string similar to Unknown code generator..
        /// </summary>
        CodeGenerator_Unkown,
        /// <summary>
        ///   Looks up a localized string similar to WinForms Designer.
        /// </summary>
        CodeGenerator_WinForms,
        /// <summary>
        ///   Looks up a localized string similar to Code:.
        /// </summary>
        CodeHeader,
        /// <summary>
        ///   Looks up a localized string similar to Comment:.
        /// </summary>
        CommentHeader,
        /// <summary>
        ///   Looks up a localized string similar to Duplicate key.
        /// </summary>
        DuplicateKey,
        /// <summary>
        ///   Looks up a localized string similar to Error:.
        /// </summary>
        Error,
        /// <summary>
        ///   Looks up a localized string similar to Some files are open in another window. Please clos....
        /// </summary>
        ErrorOpenFilesInEditor,
        /// <summary>
        ///   Looks up a localized string similar to Error loading the ResX Manager extension: {0}.&amp....
        /// </summary>
        ExtensionLoadingError,
        /// <summary>
        ///   Looks up a localized string similar to ResX Resource Manager loaded.&amp;#13;&amp;#10;Hom....
        /// </summary>
        IntroMessage,
        /// <summary>
        ///   Looks up a localized string similar to The key contains invalid characters..
        /// </summary>
        KeyContainsInvalidCharacters,
        /// <summary>
        ///   Looks up a localized string similar to Key:.
        /// </summary>
        KeyHeader,
        /// <summary>
        ///   Looks up a localized string similar to Move to Resource.
        /// </summary>
        MoveToResource,
        /// <summary>
        ///   Looks up a localized string similar to Edit new entry in ResX Resource Manager.
        /// </summary>
        MoveToResourceEditNewEntry,
        /// <summary>
        ///   Looks up a localized string similar to Open in ResX Manager.
        /// </summary>
        OpenInResXManager,
        /// <summary>
        ///   Looks up a localized string similar to The project has no resource file for the language ....
        /// </summary>
        ProjectHasNoResourceFile,
        /// <summary>
        ///   Looks up a localized string similar to Some files in your project are not writable. Make ....
        /// </summary>
        ProjectHasReadOnlyFiles,
        /// <summary>
        ///   Looks up a localized string similar to Resource:.
        /// </summary>
        ResourceHeader,
        /// <summary>
        ///   Looks up a localized string similar to Error loading resource files: {0}. &amp;#13;&amp;#....
        /// </summary>
        ResourceLoadingError,
        /// <summary>
        ///   Looks up a localized string similar to Error reporting.
        /// </summary>
        ShowErrorsConfiguration_Header,
        /// <summary>
        ///   Looks up a localized string similar to Show as.
        /// </summary>
        ShowErrorsConfiguration_ShowAs,
        /// <summary>
        ///   Looks up a localized string similar to Show messages in error list.
        /// </summary>
        ShowErrorsConfiguration_SwitchHeader,
        /// <summary>
        ///   Looks up a localized string similar to Show white space and formatting symbols.
        /// </summary>
        ShowWhitespaceToolTip,
        /// <summary>
        ///   Looks up a localized string similar to ResX Resource Manager.
        /// </summary>
        /// <remarks>
        /// @Invariant
        /// </remarks>
        ToolWindowTitle,
        /// <summary>
        ///   Looks up a localized string similar to Value:.
        /// </summary>
        ValueHeader,
        /// <summary>
        ///   Looks up a localized string similar to Version: {0}.
        /// </summary>
        Version,
        /// <summary>
        ///   Looks up a localized string similar to Warning:.
        /// </summary>
        Warning,
    }

    /// <summary>
    /// Specifies a localized description for an object.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("ResXResourceManager", "1.0.0.0")]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [AttributeUsage(AttributeTargets.All, AllowMultiple=false)]
    public sealed class LocalizedDescriptionAttribute : System.ComponentModel.DescriptionAttribute
    {
        private readonly StringResourceKey _resourceKey;

        /// <summary>
        /// Initializes a new instance of the <see cref="LocalizedDescriptionAttribute"/> class.
        /// </summary>
        /// <param name="resourceKey">The resource key of the associated resource.</param>
        public LocalizedDescriptionAttribute(StringResourceKey resourceKey)
        {
            _resourceKey = resourceKey;
        }

        /// <summary>
        /// Gets the localized description from the resource id stored in this attribute.
        /// </summary>
        public override string Description
        {
            get
            {
                return Resources.ResourceManager.GetString(_resourceKey.ToString());
            }
        }
    }

    /// <summary>
    /// Specifies a localized display name for an object.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("ResXResourceManager", "1.0.0.0")]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [AttributeUsage(AttributeTargets.All, AllowMultiple=false)]
    public sealed class LocalizedDisplayNameAttribute : System.ComponentModel.DisplayNameAttribute
    {
        private readonly StringResourceKey _resourceKey;

        /// <summary>
        /// Initializes a new instance of the <see cref="LocalizedDisplayNameAttribute"/> class.
        /// </summary>
        /// <param name="resourceKey">The resource key of the associated resource.</param>
        public LocalizedDisplayNameAttribute(StringResourceKey resourceKey)
        {
            _resourceKey = resourceKey;
        }

        /// <summary>
        /// Gets the localized display name from the resource id stored in this attribute.
        /// </summary>
        public override string DisplayName
        {
            get
            {
                return Resources.ResourceManager.GetString(_resourceKey.ToString());
            }
        }
    }

    /// <summary>
    /// Specifies a localized display name for an object.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("ResXResourceManager", "1.0.0.0")]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [AttributeUsage(AttributeTargets.All, AllowMultiple=false)]
    public sealed class LocalizedCategoryAttribute : System.ComponentModel.CategoryAttribute
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LocalizedCategoryAttribute"/> class.
        /// </summary>
        /// <param name="resourceKey">The resource key of the associated resource.</param>
        public LocalizedCategoryAttribute(StringResourceKey resourceKey)
            : base(resourceKey.ToString())
        {
        }

        /// <summary>
        /// Gets the localized category name from the resource id stored in this attribute.
        /// </summary>
        protected override string GetLocalizedString(string value)
        {
            return Resources.ResourceManager.GetString(value);
        }
    }

    /// <summary>
    /// Specifies a localized display name for an object.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("ResXResourceManager", "1.0.0.0")]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [AttributeUsage(AttributeTargets.All, AllowMultiple = true)]
    public sealed class LocalizedTextAttribute : global::TomsToolbox.Desktop.TextAttribute
    {
        // This code is generated by Resources.Designer.t4
        // If you get compile errors because you don't use the TomsToolbox.Desktop NuGet package, remove this part in the Resources.Designer.t4 file. 
        // Just search for this text and follow the instructions above.

        private readonly StringResourceKey _resourceKey;

        /// <summary>
        /// Initializes a new instance of the <see cref="LocalizedTextAttribute"/> class.
        /// </summary>
        /// <param name="key">Any user defined key to specify the usage of this text.</param>
        /// <param name="resourceKey">The resource key of the associated resource.</param>
        public LocalizedTextAttribute(object key, StringResourceKey resourceKey)
            : base(key)
        {
            _resourceKey = resourceKey;
        }

        /// <summary>
        /// Gets the localized text from the resource id stored in this attribute.
        /// </summary>
        public override string Text
        {
            get
            {
                return Resources.ResourceManager.GetString(_resourceKey.ToString());
            }
        }
    }

    /// <summary>
    /// A localizable version of the <see cref="System.ComponentModel.DataAnnotations.DataTypeAttribute"/> class.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("ResXResourceManager", "1.0.0.0")]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [AttributeUsage(AttributeTargets.Field | AttributeTargets.Parameter | AttributeTargets.Property, AllowMultiple = false)]
    public class DataTypeAttribute : System.ComponentModel.DataAnnotations.DataTypeAttribute
    {
        private StringResourceKey _resourceKey;

        /// <summary>
        /// Initializes a new instance of the <see cref="DataTypeAttribute"/> class.
        /// </summary>
        public DataTypeAttribute(StringResourceKey resourceKey, System.ComponentModel.DataAnnotations.DataType dataType)
            : base(dataType)
        {
            ResourceKey = resourceKey;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DataTypeAttribute"/> class.
        /// </summary>
        public DataTypeAttribute(StringResourceKey resourceKey, string customDataType)
            : base(customDataType)
        {
            ResourceKey = resourceKey;
        }

        /// <summary>
        /// Gets or sets the resource key.
        /// </summary>
        public StringResourceKey ResourceKey
        {
            get
            {
                return _resourceKey;
            }
            set
            {
                _resourceKey = value;
                ErrorMessageResourceType = typeof(Resources);
                ErrorMessageResourceName = value.ToString();
            }
        }
    }
    
    /// <summary>
    /// A localizable version of the <see cref="System.ComponentModel.DataAnnotations.RangeAttribute"/> class.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("ResXResourceManager", "1.0.0.0")]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [AttributeUsage(AttributeTargets.Field | AttributeTargets.Parameter | AttributeTargets.Property, AllowMultiple = false)]
    public class RangeAttribute : System.ComponentModel.DataAnnotations.RangeAttribute
    {
        private StringResourceKey _resourceKey;

        /// <summary>
        /// Initializes a new instance of the <see cref="RangeAttribute"/> class.
        /// </summary>
        public RangeAttribute(StringResourceKey resourceKey, int minimum, int maximum)
            : base(minimum, maximum)
        {
            ResourceKey = resourceKey;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="RangeAttribute"/> class.
        /// </summary>
        public RangeAttribute(StringResourceKey resourceKey, double minimum, double maximum)
            : base(minimum, maximum)
        {
            ResourceKey = resourceKey;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="RangeAttribute"/> class.
        /// </summary>
        public RangeAttribute(StringResourceKey resourceKey, Type type, string minimum, string maximum)
            : base(type, minimum, maximum)
        {
            ResourceKey = resourceKey;
        }

        /// <summary>
        /// Gets or sets the resource key.
        /// </summary>
        public StringResourceKey ResourceKey
        {
            get
            {
                return _resourceKey;
            }
            set
            {
                _resourceKey = value;
                ErrorMessageResourceType = typeof(Resources);
                ErrorMessageResourceName = value.ToString();
            }
        }
    }
    
    /// <summary>
    /// A localizable version of the <see cref="System.ComponentModel.DataAnnotations.RegularExpressionAttribute"/> class.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("ResXResourceManager", "1.0.0.0")]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [AttributeUsage(AttributeTargets.Field | AttributeTargets.Parameter | AttributeTargets.Property, AllowMultiple = false)]
    public class RegularExpressionAttribute : System.ComponentModel.DataAnnotations.RegularExpressionAttribute
    {
        private StringResourceKey _resourceKey;

        /// <summary>
        /// Initializes a new instance of the <see cref="RegularExpressionAttribute"/> class.
        /// </summary>
        public RegularExpressionAttribute(StringResourceKey resourceKey, string pattern)
            : base(pattern)
        {
            ResourceKey = resourceKey;
        }

        /// <summary>
        /// Gets or sets the resource key.
        /// </summary>
        public StringResourceKey ResourceKey
        {
            get
            {
                return _resourceKey;
            }
            set
            {
                _resourceKey = value;
                ErrorMessageResourceType = typeof(Resources);
                ErrorMessageResourceName = value.ToString();
            }
        }
    }
    
    /// <summary>
    /// A localizable version of the <see cref="System.ComponentModel.DataAnnotations.RequiredAttribute"/> class.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("ResXResourceManager", "1.0.0.0")]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [AttributeUsage(AttributeTargets.Field | AttributeTargets.Parameter | AttributeTargets.Property, AllowMultiple = false)]
    public class RequiredAttribute : System.ComponentModel.DataAnnotations.RequiredAttribute
    {
        private StringResourceKey _resourceKey;

        /// <summary>
        /// Initializes a new instance of the <see cref="RequiredAttribute"/> class.
        /// </summary>
        public RequiredAttribute(StringResourceKey resourceKey)
            : base()
        {
            ResourceKey = resourceKey;
        }

        /// <summary>
        /// Gets or sets the resource key.
        /// </summary>
        public StringResourceKey ResourceKey
        {
            get
            {
                return _resourceKey;
            }
            set
            {
                _resourceKey = value;
                ErrorMessageResourceType = typeof(Resources);
                ErrorMessageResourceName = value.ToString();
            }
        }
    }
    
    /// <summary>
    /// A localizable version of the <see cref="System.ComponentModel.DataAnnotations.StringLengthAttribute"/> class.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("ResXResourceManager", "1.0.0.0")]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [AttributeUsage(AttributeTargets.Field | AttributeTargets.Parameter | AttributeTargets.Property, AllowMultiple = false)]
    public class StringLengthAttribute : System.ComponentModel.DataAnnotations.StringLengthAttribute
    {
        private StringResourceKey _resourceKey;

        /// <summary>
        /// Initializes a new instance of the <see cref="StringLengthAttribute"/> class.
        /// </summary>
        public StringLengthAttribute(StringResourceKey resourceKey, int maximumLength)
            : base(maximumLength)
        {
            ResourceKey = resourceKey;
        }

        /// <summary>
        /// Gets or sets the resource key.
        /// </summary>
        public StringResourceKey ResourceKey
        {
            get
            {
                return _resourceKey;
            }
            set
            {
                _resourceKey = value;
                ErrorMessageResourceType = typeof(Resources);
                ErrorMessageResourceName = value.ToString();
            }
        }
    }
    

}
